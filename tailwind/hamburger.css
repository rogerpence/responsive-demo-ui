/*!
 * Hamburgers
 * @description Tasty CSS-animated hamburgers
 * @author Jonathan Suh @jonsuh
 * @site https://jonsuh.com/hamburgers
 * @link https://github.com/jonsuh/hamburgers
 */

/* Example use with Tailwind:
 |
 |   <div id="hamburger" class="p-2">
 |       <button class="md:hidden hamburger hamburger--spin" type="button">
 |           <span class="hamburger-box">
 |               <span class="hamburger-inner"></span>
 |           </span>
 |       </button>
 |   </div>
*/

 /*
  | Disable button outline on Chrome.
  */
.hamburger:focus {
  outline: 0;
}
.hamburger {
  --icon-color: #f5f5f6;
/*
  --width: 2.6em;
  --height: .325em;
  --width: 2.4em;
  --height: .3em;
  --width: 2.2em;
  --height: .275em;
*/
  --width: 2em;
  --height: .25em;
/*
  --width: 1.8em;
  --height: .225em;
  --width: 1.6em;
  --height: .2em;
*/

  outline: none;
  padding: 10px 10px;
  display: inline-block;
  cursor: pointer;
  transition-property: opacity, filter;
  transition-duration: 0.15s;
  transition-timing-function: linear;
  font: inherit;
  color: inherit;
  text-transform: none;
  background-color: transparent;
  border: 0;
  margin: 0;
  overflow: visible;
}

.hamburger:hover {
  opacity: 0.7;
}

.hamburger.is-active:hover {
  opacity: 0.7;
}

.hamburger.is-active .hamburger-inner,
.hamburger.is-active .hamburger-inner::before,
.hamburger.is-active .hamburger-inner::after {
  /* background-color: var(--background-color); */
  background-color: var(--icon-color);
  /* background-color: inherit; */
}

.hamburger-box {
  width: var(--width);
  height: var(--height);
  display: inline-block;
  position: relative;
}

.hamburger-inner {
  outline: none;
  display: block;
  top: 50%;
  margin-top: -2px;
}

.hamburger-inner,
.hamburger-inner::before,
.hamburger-inner::after {
  width: var(--width);
  height: var(--height);
  /* background-color: var(--background-color); */
  background-color: var(--icon-color);
  /* background-color: inherit; */
  border-radius: 4px;
  position: absolute;
  transition-property: transform;
  transition-duration: 0.15s;
  transition-timing-function: ease;
}

.hamburger-inner::before,
.hamburger-inner::after {
  content: "";
  display: block;
}

.hamburger-inner::before {
  top: -10px;
}

.hamburger-inner::after {
  bottom: -10px;
}


/*
 | Spin
 */
.hamburger--spin .hamburger-inner {
  transition-duration: 0.22s;
  transition-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);
}

.hamburger--spin .hamburger-inner::before {
  transition: top 0.1s 0.25s ease-in, opacity 0.1s ease-in;
}

.hamburger--spin .hamburger-inner::after {
  transition: bottom 0.1s 0.25s ease-in, transform 0.22s cubic-bezier(0.55, 0.055, 0.675, 0.19);
}

.hamburger--spin.is-active .hamburger-inner {
  transform: rotate(225deg);
  transition-delay: 0.12s;
  transition-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);
}

.hamburger--spin.is-active .hamburger-inner::before {
  top: 0;
  opacity: 0;
  transition: top 0.1s ease-out, opacity 0.1s 0.12s ease-out;
}

.hamburger--spin.is-active .hamburger-inner::after {
  bottom: 0;
  transform: rotate(-90deg);
  transition: bottom 0.1s ease-out, transform 0.22s 0.12s cubic-bezier(0.215, 0.61, 0.355, 1);
}
